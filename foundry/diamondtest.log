No files changed, compilation skipped

Ran 20 tests for test/proxy/DiamondTest.t.sol:DiamondTest
[PASS] test_DiamondCut_AddFacets() (gas: 157245)
Traces:
  [157245] DiamondTest::test_DiamondCut_AddFacets()
    ├─ [0] VM::expectEmit(true, true, true, true)
    │   └─ ← [Return] 
    ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    ├─ [134323] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [129389] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [5337] BeanHeadsDiamond::fallback(0x3e6fec04) [staticcall]
    │   ├─ [457] DiamondLoupeFacet::facetAddress(0x3e6fec04) [delegatecall]
    │   │   └─ ← [Return] MockFacet: [0x1d1499e622D69689cdf9004d05Ec547d650Ff211]
    │   └─ ← [Return] MockFacet: [0x1d1499e622D69689cdf9004d05Ec547d650Ff211]
    ├─ [0] VM::assertEq(MockFacet: [0x1d1499e622D69689cdf9004d05Ec547d650Ff211], MockFacet: [0x1d1499e622D69689cdf9004d05Ec547d650Ff211]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_DiamondCut_ExistingSelector() (gas: 151579)
Traces:
  [151579] DiamondTest::test_DiamondCut_ExistingSelector()
    ├─ [134323] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [129389] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000024b07106633e6fec040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [3825] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [3384] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   └─ ← [Revert] BHDLib__CannotAddExistingSelector(0x3e6fec04)
    │   └─ ← [Revert] BHDLib__CannotAddExistingSelector(0x3e6fec04)
    └─ ← [Return] 

[FAIL: Error != expected error: Initialization reverted != BHDLib__InitializationFunctionReverted(0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, 0x83fcb85e)] test_DiamondCut_InitReverts() (gas: 226907)
Traces:
  [3400190] DiamondTest::setUp()
    ├─ [1318979] → new DiamondCutFacet@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   └─ ← [Return] 6588 bytes of code
    ├─ [184094] → new BeanHeadsDiamond@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, action: 0, functionSelectors: [0x1f931c1c] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   └─ ← [Return] 193 bytes of code
    ├─ [518357] → new DiamondLoupeFacet@0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9
    │   └─ ← [Return] 2589 bytes of code
    ├─ [95147] → new OwnershipFacet@0xc7183455a4C133Ae270771860664b6B7ec320bB1
    │   └─ ← [Return] 475 bytes of code
    ├─ [241288] → new DiamondInit@0xa0Cb889707d426A7A386870A03bc70d1b0697598
    │   └─ ← [Return] 1205 bytes of code
    ├─ [71129] → new MockFacet@0x1d1499e622D69689cdf9004d05Ec547d650Ff211
    │   └─ ← [Return] 355 bytes of code
    ├─ [648754] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   ├─ [648235] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], _init: DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], _calldata: 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   │   ├─ [288699] DiamondInit::init(MockRoyalty: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], mockPriceFeed: [0xD7831dDA28b567D1A798B18e53B9Cfa10dF81120]) [delegatecall]
    │   │   │   └─ ← [Return] 
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    └─ ← [Stop] 

  [226907] DiamondTest::test_DiamondCut_InitReverts()
    ├─ [45905] → new RevertingInit@0xA4AD4f68d0b91CFD19687c881e50f3A00242828c
    │   └─ ← [Return] 229 bytes of code
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000084fd487fbf000000000000000000000000a4ad4f68d0b91cfd19687c881e50f3a00242828c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000483fcb85e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [135544] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], RevertingInit: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c], 0x83fcb85e)
    │   ├─ [130591] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], RevertingInit: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c], 0x83fcb85e) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], _init: RevertingInit: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c], _calldata: 0x83fcb85e)
    │   │   ├─ [193] RevertingInit::revertFunction() [delegatecall]
    │   │   │   └─ ← [Revert] revert: Initialization reverted
    │   │   └─ ← [Revert] revert: Initialization reverted
    │   └─ ← [Revert] revert: Initialization reverted
    └─ ← [Revert] Error != expected error: Initialization reverted != BHDLib__InitializationFunctionReverted(0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, 0x83fcb85e)

[FAIL: panic: failed to convert value into enum type (0x21)] test_DiamondCut_InvalidAction() (gas: 1160)
Traces:
  [3400190] DiamondTest::setUp()
    ├─ [1318979] → new DiamondCutFacet@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   └─ ← [Return] 6588 bytes of code
    ├─ [184094] → new BeanHeadsDiamond@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, action: 0, functionSelectors: [0x1f931c1c] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   └─ ← [Return] 193 bytes of code
    ├─ [518357] → new DiamondLoupeFacet@0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9
    │   └─ ← [Return] 2589 bytes of code
    ├─ [95147] → new OwnershipFacet@0xc7183455a4C133Ae270771860664b6B7ec320bB1
    │   └─ ← [Return] 475 bytes of code
    ├─ [241288] → new DiamondInit@0xa0Cb889707d426A7A386870A03bc70d1b0697598
    │   └─ ← [Return] 1205 bytes of code
    ├─ [71129] → new MockFacet@0x1d1499e622D69689cdf9004d05Ec547d650Ff211
    │   └─ ← [Return] 355 bytes of code
    ├─ [648754] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   ├─ [648235] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], _init: DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], _calldata: 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   │   ├─ [288699] DiamondInit::init(MockRoyalty: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], mockPriceFeed: [0xD7831dDA28b567D1A798B18e53B9Cfa10dF81120]) [delegatecall]
    │   │   │   └─ ← [Return] 
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    └─ ← [Stop] 

  [1160] DiamondTest::test_DiamondCut_InvalidAction()
    └─ ← [Revert] panic: failed to convert value into enum type (0x21)

[PASS] test_DiamondCut_NoSelectors() (gas: 21223)
Traces:
  [21223] DiamondTest::test_DiamondCut_NoSelectors()
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000024ff05b5b30000000000000000000000001d1499e622d69689cdf9004d05ec547d650ff21100000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [9183] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [4248] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   └─ ← [Revert] BHDLib__NotSelectorsProvided(0x1d1499e622D69689cdf9004d05Ec547d650Ff211)
    │   └─ ← [Revert] BHDLib__NotSelectorsProvided(0x1d1499e622D69689cdf9004d05Ec547d650Ff211)
    └─ ← [Return] 

[PASS] test_DiamondCut_RemoveFacet() (gas: 131363)
Traces:
  [169469] DiamondTest::test_DiamondCut_RemoveFacet()
    ├─ [134323] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [129389] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [0] VM::expectEmit(true, true, true, true)
    │   └─ ← [Return] 
    ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 2, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    ├─ [11124] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 2, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [10690] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 2, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 2, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [5337] BeanHeadsDiamond::fallback(0x3e6fec04) [staticcall]
    │   ├─ [457] DiamondLoupeFacet::facetAddress(0x3e6fec04) [delegatecall]
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000
    │   └─ ← [Return] 0x0000000000000000000000000000000000000000
    ├─ [0] VM::assertEq(0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[FAIL: Error != expected error: BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000) != BHDLib__CannotRemoveFunctionThatDoesNotExist(0x3e6fec04)] test_DiamondCut_RemoveNonExistent() (gas: 22788)
Traces:
  [3400190] DiamondTest::setUp()
    ├─ [1318979] → new DiamondCutFacet@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   └─ ← [Return] 6588 bytes of code
    ├─ [184094] → new BeanHeadsDiamond@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, action: 0, functionSelectors: [0x1f931c1c] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   └─ ← [Return] 193 bytes of code
    ├─ [518357] → new DiamondLoupeFacet@0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9
    │   └─ ← [Return] 2589 bytes of code
    ├─ [95147] → new OwnershipFacet@0xc7183455a4C133Ae270771860664b6B7ec320bB1
    │   └─ ← [Return] 475 bytes of code
    ├─ [241288] → new DiamondInit@0xa0Cb889707d426A7A386870A03bc70d1b0697598
    │   └─ ← [Return] 1205 bytes of code
    ├─ [71129] → new MockFacet@0x1d1499e622D69689cdf9004d05Ec547d650Ff211
    │   └─ ← [Return] 355 bytes of code
    ├─ [648754] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   ├─ [648235] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], _init: DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], _calldata: 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   │   ├─ [288699] DiamondInit::init(MockRoyalty: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], mockPriceFeed: [0xD7831dDA28b567D1A798B18e53B9Cfa10dF81120]) [delegatecall]
    │   │   │   └─ ← [Return] 
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    └─ ← [Stop] 

  [22788] DiamondTest::test_DiamondCut_RemoveNonExistent()
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000024cdfd43643e6fec040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [12423] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 2, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [7482] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 2, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   └─ ← [Revert] BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000)
    │   └─ ← [Revert] BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000)
    └─ ← [Revert] Error != expected error: BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000) != BHDLib__CannotRemoveFunctionThatDoesNotExist(0x3e6fec04)

[PASS] test_DiamondCut_ReplaceFacet() (gas: 305207)
Traces:
  [386774] DiamondTest::test_DiamondCut_ReplaceFacet()
    ├─ [134323] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [129389] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 0, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [71129] → new MockFacet@0xA4AD4f68d0b91CFD19687c881e50f3A00242828c
    │   └─ ← [Return] 355 bytes of code
    ├─ [0] VM::expectEmit(true, true, true, true)
    │   └─ ← [Return] 
    ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, action: 1, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    ├─ [122443] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, action: 1, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [122009] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, action: 1, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, action: 1, functionSelectors: [0x3e6fec04] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [5337] BeanHeadsDiamond::fallback(0x3e6fec04) [staticcall]
    │   ├─ [457] DiamondLoupeFacet::facetAddress(0x3e6fec04) [delegatecall]
    │   │   └─ ← [Return] MockFacet: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c]
    │   └─ ← [Return] MockFacet: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c]
    ├─ [0] VM::assertEq(MockFacet: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c], MockFacet: [0xA4AD4f68d0b91CFD19687c881e50f3A00242828c]) [staticcall]
    │   └─ ← [Return] 
    ├─ [420] MockFacet::mockFunction() [staticcall]
    │   └─ ← [Return] "Mock Function Called"
    ├─ [0] VM::assertEq("Mock Function Called", "Mock Function Called") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[FAIL: Error != expected error: BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000) != BHDLib__CannotReplaceFunctionThatDoesNotExist(0x3e6fec04)] test_DiamondCut_ReplaceNonExistentFacet() (gas: 79344)
Traces:
  [3400190] DiamondTest::setUp()
    ├─ [1318979] → new DiamondCutFacet@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   └─ ← [Return] 6588 bytes of code
    ├─ [184094] → new BeanHeadsDiamond@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, action: 0, functionSelectors: [0x1f931c1c] })], _init: 0x0000000000000000000000000000000000000000, _calldata: 0x)
    │   └─ ← [Return] 193 bytes of code
    ├─ [518357] → new DiamondLoupeFacet@0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9
    │   └─ ← [Return] 2589 bytes of code
    ├─ [95147] → new OwnershipFacet@0xc7183455a4C133Ae270771860664b6B7ec320bB1
    │   └─ ← [Return] 475 bytes of code
    ├─ [241288] → new DiamondInit@0xa0Cb889707d426A7A386870A03bc70d1b0697598
    │   └─ ← [Return] 1205 bytes of code
    ├─ [71129] → new MockFacet@0x1d1499e622D69689cdf9004d05Ec547d650Ff211
    │   └─ ← [Return] 355 bytes of code
    ├─ [648754] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   ├─ [648235] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120) [delegatecall]
    │   │   ├─ emit DiamondCut(_diamondCut: [FacetCut({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, action: 0, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), FacetCut({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, action: 0, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })], _init: DiamondInit: [0xa0Cb889707d426A7A386870A03bc70d1b0697598], _calldata: 0xf09a40160000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d7831dda28b567d1a798b18e53b9cfa10df81120)
    │   │   ├─ [288699] DiamondInit::init(MockRoyalty: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], mockPriceFeed: [0xD7831dDA28b567D1A798B18e53B9Cfa10dF81120]) [delegatecall]
    │   │   │   └─ ← [Return] 
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    └─ ← [Stop] 

  [79344] DiamondTest::test_DiamondCut_ReplaceNonExistentFacet()
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000024a8744dae3e6fec040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [66845] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 1, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [61904] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x1d1499e622D69689cdf9004d05Ec547d650Ff211, action: 1, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   └─ ← [Revert] BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000)
    │   └─ ← [Revert] BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000)
    └─ ← [Revert] Error != expected error: BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000) != BHDLib__CannotReplaceFunctionThatDoesNotExist(0x3e6fec04)

[PASS] test_DiamondCut_ZeroAddress() (gas: 20798)
Traces:
  [20798] DiamondTest::test_DiamondCut_ZeroAddress()
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000645da17997000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000013e6fec040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [9709] BeanHeadsDiamond::fallback([FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x)
    │   ├─ [4762] DiamondCutFacet::diamondCut([FacetCut({ facetAddress: 0x0000000000000000000000000000000000000000, action: 0, functionSelectors: [0x3e6fec04] })], 0x0000000000000000000000000000000000000000, 0x) [delegatecall]
    │   │   └─ ← [Revert] BHDLib__CannotAddZeroSelector([0x3e6fec04])
    │   └─ ← [Revert] BHDLib__CannotAddZeroSelector([0x3e6fec04])
    └─ ← [Return] 

[PASS] test_FacetAddress() (gas: 18217)
Traces:
  [18217] DiamondTest::test_FacetAddress()
    ├─ [7337] BeanHeadsDiamond::fallback(0x8da5cb5b) [staticcall]
    │   ├─ [2457] DiamondLoupeFacet::facetAddress(0x8da5cb5b) [delegatecall]
    │   │   └─ ← [Return] OwnershipFacet: [0xc7183455a4C133Ae270771860664b6B7ec320bB1]
    │   └─ ← [Return] OwnershipFacet: [0xc7183455a4C133Ae270771860664b6B7ec320bB1]
    ├─ [0] VM::assertEq(OwnershipFacet: [0xc7183455a4C133Ae270771860664b6B7ec320bB1], OwnershipFacet: [0xc7183455a4C133Ae270771860664b6B7ec320bB1]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_FacetAddress_Fail_InvalidSelector() (gas: 15911)
Traces:
  [15911] DiamondTest::test_FacetAddress_Fail_InvalidSelector()
    ├─ [7337] BeanHeadsDiamond::fallback(0x12345678) [staticcall]
    │   ├─ [2457] DiamondLoupeFacet::facetAddress(0x12345678) [delegatecall]
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000
    │   └─ ← [Return] 0x0000000000000000000000000000000000000000
    ├─ [0] VM::assertEq(0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_FacetAddresses() (gas: 31786)
Traces:
  [31786] DiamondTest::test_FacetAddresses()
    ├─ [14287] BeanHeadsDiamond::fallback() [staticcall]
    │   ├─ [9392] DiamondLoupeFacet::facetAddresses() [delegatecall]
    │   │   └─ ← [Return] [0x2e234DAe75C793f67A35089C9d99245E1C58470b, 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, 0xc7183455a4C133Ae270771860664b6B7ec320bB1]
    │   └─ ← [Return] [0x2e234DAe75C793f67A35089C9d99245E1C58470b, 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, 0xc7183455a4C133Ae270771860664b6B7ec320bB1]
    ├─ [0] VM::assertEq(3, 3) [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_FacetFunctionSelectors() (gas: 22296)
Traces:
  [22296] DiamondTest::test_FacetFunctionSelectors()
    ├─ [10769] BeanHeadsDiamond::fallback(DiamondLoupeFacet: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9]) [staticcall]
    │   ├─ [5859] DiamondLoupeFacet::facetFunctionSelectors(DiamondLoupeFacet: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9]) [delegatecall]
    │   │   └─ ← [Return] [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7]
    │   └─ ← [Return] [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7]
    ├─ [0] VM::assertEq(5, 5) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_Facets() (gas: 43387)
Traces:
  [43387] DiamondTest::test_Facets()
    ├─ [31704] BeanHeadsDiamond::fallback() [staticcall]
    │   ├─ [26707] DiamondLoupeFacet::facets() [delegatecall]
    │   │   └─ ← [Return] [Facet({ facetAddress: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, functionSelectors: [0x1f931c1c] }), Facet({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), Facet({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })]
    │   └─ ← [Return] [Facet({ facetAddress: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, functionSelectors: [0x1f931c1c] }), Facet({ facetAddress: 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9, functionSelectors: [0x7a0ed627, 0xadfca15e, 0x52ef6b2c, 0xcdffacc6, 0x01ffc9a7] }), Facet({ facetAddress: 0xc7183455a4C133Ae270771860664b6B7ec320bB1, functionSelectors: [0xf2fde38b, 0x8da5cb5b] })]
    ├─ [0] VM::assertEq(3, 3) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_Owner() (gas: 17427)
Traces:
  [17427] DiamondTest::test_Owner()
    ├─ [7128] BeanHeadsDiamond::fallback() [staticcall]
    │   ├─ [2251] OwnershipFacet::owner() [delegatecall]
    │   │   └─ ← [Return] DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    │   └─ ← [Return] DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    ├─ [0] VM::assertEq(DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_SupportsInterface() (gas: 22645)
Traces:
  [22645] DiamondTest::test_SupportsInterface()
    ├─ [7248] BeanHeadsDiamond::fallback(0x1f931c1c) [staticcall]
    │   ├─ [2368] DiamondLoupeFacet::supportsInterface(0x1f931c1c) [delegatecall]
    │   │   └─ ← [Return] true
    │   └─ ← [Return] true
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return] 
    ├─ [2748] BeanHeadsDiamond::fallback(0x48e2b093) [staticcall]
    │   ├─ [2368] DiamondLoupeFacet::supportsInterface(0x48e2b093) [delegatecall]
    │   │   └─ ← [Return] true
    │   └─ ← [Return] true
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return] 
    ├─ [2748] BeanHeadsDiamond::fallback(0x7f5828d0) [staticcall]
    │   ├─ [2368] DiamondLoupeFacet::supportsInterface(0x7f5828d0) [delegatecall]
    │   │   └─ ← [Return] true
    │   └─ ← [Return] true
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_SupportsInterface_Fail_InvalidInterface() (gas: 15550)
Traces:
  [15550] DiamondTest::test_SupportsInterface_Fail_InvalidInterface()
    ├─ [7248] BeanHeadsDiamond::fallback(0x12345678) [staticcall]
    │   ├─ [2368] DiamondLoupeFacet::supportsInterface(0x12345678) [delegatecall]
    │   │   └─ ← [Return] false
    │   └─ ← [Return] false
    ├─ [0] VM::assertFalse(false) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_TransferOwnership() (gas: 25893)
Traces:
  [25893] DiamondTest::test_TransferOwnership()
    ├─ [11625] BeanHeadsDiamond::fallback(newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f])
    │   ├─ [6748] OwnershipFacet::transferOwnership(newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f]) [delegatecall]
    │   │   ├─ emit OwnershipTransferred(previousOwner: DiamondTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], newOwner: newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f])
    │   │   └─ ← [Stop] 
    │   └─ ← [Return] 
    ├─ [2628] BeanHeadsDiamond::fallback() [staticcall]
    │   ├─ [251] OwnershipFacet::owner() [delegatecall]
    │   │   └─ ← [Return] newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f]
    │   └─ ← [Return] newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f]
    ├─ [0] VM::assertEq(newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f], newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] test_TransferOwnership_NonOwner() (gas: 23620)
Traces:
  [23620] DiamondTest::test_TransferOwnership_NonOwner()
    ├─ [0] VM::prank(nonOwner: [0xcBf285639F952Bb8fb557D0532E38219CA5133C3])
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004438586c58000000000000000000000000cbf285639f952bb8fb557d0532e38219ca5133c30000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e149600000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return] 
    ├─ [7275] BeanHeadsDiamond::fallback(newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f])
    │   ├─ [2388] OwnershipFacet::transferOwnership(newOwner: [0x7240b687730BE024bcfD084621f794C2e4F8408f]) [delegatecall]
    │   │   └─ ← [Revert] BHDLib__NotContractOwner(0xcBf285639F952Bb8fb557D0532E38219CA5133C3, 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496)
    │   └─ ← [Revert] BHDLib__NotContractOwner(0xcBf285639F952Bb8fb557D0532E38219CA5133C3, 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496)
    └─ ← [Return] 

Suite result: FAILED. 16 passed; 4 failed; 0 skipped; finished in 8.82ms (18.12ms CPU time)

Ran 1 test suite in 2.13s (8.82ms CPU time): 16 tests passed, 4 failed, 0 skipped (20 total tests)

Failing tests:
Encountered 4 failing tests in test/proxy/DiamondTest.t.sol:DiamondTest
[FAIL: Error != expected error: Initialization reverted != BHDLib__InitializationFunctionReverted(0xA4AD4f68d0b91CFD19687c881e50f3A00242828c, 0x83fcb85e)] test_DiamondCut_InitReverts() (gas: 226907)
[FAIL: panic: failed to convert value into enum type (0x21)] test_DiamondCut_InvalidAction() (gas: 1160)
[FAIL: Error != expected error: BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000) != BHDLib__CannotRemoveFunctionThatDoesNotExist(0x3e6fec04)] test_DiamondCut_RemoveNonExistent() (gas: 22788)
[FAIL: Error != expected error: BHDLib__CannotBeZeroAddress(0x0000000000000000000000000000000000000000) != BHDLib__CannotReplaceFunctionThatDoesNotExist(0x3e6fec04)] test_DiamondCut_ReplaceNonExistentFacet() (gas: 79344)

Encountered a total of 4 failing tests, 16 tests succeeded
